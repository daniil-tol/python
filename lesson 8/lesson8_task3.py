# Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта,
# введя, например, команду “stop”. При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только
# если введено число. Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.
class Error:                            # Создайте собственный класс-исключение
    def __init__(self, *args):          # *args длина списка не фиксирована
        self.my_list = []

    def my_input(self):

        while True:
            try:
                val = float(input('\nВведите значения и нажимайте Enter - '))
                self.my_list.append(val)
                print(f'Текущий список - {self.my_list} \n ')
            except ValueError:
                print(f"Недопустимое значение - введенные данные по типу строковые или булевые")
                y_or_n = input(f'Продолжить? Y/N ')

                if y_or_n.upper() == 'Y':
                    print(a.my_input())
                else:
                    if y_or_n.upper() == 'N':
                        return f'Вы вышли! \nСозданный список - {self.my_list}'

a = Error()
print(Error().my_input())